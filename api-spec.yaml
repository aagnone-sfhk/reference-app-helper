openapi: 3.0.0
info:
  version: 1.0.0
  title: Heroku-Salesforce API
  description: Sample Heroku app exposing APIs to connected Salesforce and Data Cloud orgs.
servers:
  - url: /
paths:
  /api/accounts/:
    get:
      tags:
        - accounts
      summary: Get All Accounts
      operationId: GetAccounts
      description: Returns array of Accounts
      x-sfdc:
        heroku:
          authorization:
            connectedApp: 'MyAppLinkConnectedApp'
            permissionSet: 'MyAppLinkPermSet'
      responses:
        '200':
          description: Successfully returned a list of Accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
  /api/unitofwork/:
    post:
      tags:
        - unitofwork
      summary: Create Multiple Records
      operationId: UnitOfWork
      description:
        Receives a payload containing Account, Contact, and Case details and uses the
        Unit of Work pattern to assign the corresponding values to to its Record
        while maintaining the relationships. It then commits the unit of work and
        returns the Record Id's for each object.
      x-sfdc:
        heroku:
          authorization:
            connectedApp: 'MyAppLinkConnectedApp'
            permissionSet: 'MyAppLinkPermSet'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOfWorkRequest'
      responses:
        '201':
          description: Received UnitOfWork API request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfWorkResponse'
      callbacks:
        unitOfWorkResponse:
          '{$request.body#/data/callbackUrl}':
            post:
              description: Response from /unitofwork API
              operationId: unitOfWorkResponseCallback
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UnitOfWorkCallback'
              responses: # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          example: '001...'
        name:
          type: string
          example: 'Test Account'
    UnitOfWorkData:
      type: object
      properties:
        accountName:
          type: string
          example: Test Account
        lastName:
          type: string
          example: Test
        subject:
          type: string
          example: Test Case
        firstName:
          type: string
          example: First
        description:
          type: string
          example: This is a test case.
        callbackUrl:
          type: string
          example: http://localhost/callback
    UnitOfWorkRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UnitOfWorkData'
    UnitOfWorkResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
    UnitOfWorkCallback:
      type: object
      properties:
        accountId:
          type: string
        contactId:
          type: string
        cases:
          type: object
          properties:
            serviceCaseId:
              type: string
            followupCaseId:
              type: string
